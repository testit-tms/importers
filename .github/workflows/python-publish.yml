# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

on:
  release:
    types: [ published ]

permissions:
  contents: read

jobs:
  deploy:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        package: [
            testit-importer-allure
        ]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - name: Check version
        run: |
          paths=($(ls | grep 'testit'))
          for str in ${paths[@]}; do        
            VERSION=$(grep -oP 'VERSION\s*=\s*"\K[^"]+' $str/setup.py)
            python .version_check/check.py $VERSION
          done
      - name: Install dependencies ${{ matrix.package }}
        working-directory: ${{ matrix.package }}
        run: |
          python -m pip install --upgrade pip
          pip install build
      - name: Build package
        working-directory: ${{ matrix.package }}
        run: |
          python -m build -s
      - name: Publish package
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          skip-existing: true
          user: __token__
          packages-dir: ${{ matrix.package }}/dist/
          password: ${{ secrets.PYPI_API_TOKEN }}
